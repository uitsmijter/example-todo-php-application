---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
        - image: mariadb:10
          name: database
          imagePullPolicy: Always
          ports:
            - containerPort: 3306
          envFrom:
            - secretRef:
                name: env
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: database-data

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
spec:
  selector:
    matchLabels:
      app: app
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
        - name: app-migrate
          image: docker.ausdertechnik.de/uitsmijter/mirrors/example-todo-php-application:latest
          imagePullPolicy: Always
          command:
            - sh
            - -c
            - while ! ./artisan migrate --force; do sleep 1; done
          envFrom:
            - secretRef:
                name: env
      containers:
        - name: app
          image: docker.ausdertechnik.de/uitsmijter/mirrors/example-todo-php-application:latest
          imagePullPolicy: Always
          command:
            - sh
            - -c
            - >
              php artisan config:cache&
              php artisan route:cache&
              php artisan view:cache&
              touch storage/logs/laravel.log &&
              chmod 666 storage/logs/laravel.log &&
              tail -fn0 storage/logs/laravel.log&
              exec apache2-foreground
          envFrom:
            - secretRef:
                name: env
          ports:
            - containerPort: 80
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /
              port: 80
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /
              port: 80
          startupProbe:
            failureThreshold: 60
            periodSeconds: 5
            tcpSocket:
              port: 80

          resources:
            requests:
              memory: "512Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "200m"

      imagePullSecrets:
        - name: gitlab-auth
